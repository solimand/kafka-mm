version: "3.9"
# NET
networks:
  kafka-net:
    name: kafka-net

services:
# SUPPORT Containers
  # minibox:
  #   image: busybox
  #   container_name: utils
  #   command: tail -F anything # wait undefinetly the file "anything"
  #   networks:
  #     - kafka-net
    
# ZOOKEEPER
  # zookeeperSource:
  #   image: confluentinc/cp-zookeeper
  #   container_name: zsource
  #   environment:
  #     ZOOKEEPER_SERVER_ID: 1
  #     ZOOKEEPER_CLIENT_PORT: 2181
  #   networks:
  #     - kafka-net

  zookeeperDest:
    image: confluentinc/cp-zookeeper
    container_name: zdest
    environment:
      ZOOKEEPER_SERVER_ID: 2
      ZOOKEEPER_CLIENT_PORT: 2182
      KAFKA_OPTS: -Djava.security.auth.login.config=/etc/zookeeper/zookeeper_jaas.conf
    networks:
      - kafka-net
    volumes:
      - ./Zoo-dest/:/etc/zookeeper

# KAFKA 
  # sourcebro:
  #   container_name: ksource
  #   depends_on:
  #     - zookeeperSource
  #   build:
  #     context: .
  #     dockerfile: ./Kafka-source/Dockerfile-source
  #   environment:
  #     KAFKA_BROKER_ID: 1
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeperSource:2181
  #     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://ksource:9092
  #   networks:
  #     - kafka-net
  
  destbro:
    container_name: kdest
    depends_on:
      - zookeeperDest
    build:
      context: .
      dockerfile: ./Kafka-dest/Dockerfile-dest
    networks:
      - kafka-net
    #env_file:
    #  - ./Kafka-dest/brokerdest.env
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeperDest:2182
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ADVERTISED_LISTENERS: SSL://:9093 #,SASL_SSL://:9094
      KAFKA_SSL_KEYSTORE_FILENAME: kafka.server.keystore.jks      
      KAFKA_SSL_TRUSTSTORE_FILENAME: kafka.server.truststore.jks

      # KAFKA_SSL_KEYSTORE_CREDENTIALS: keystore-cred
      # KAFKA_SSL_KEY_CREDENTIALS: cert-signed
      # KAFKA_SSL_TRUSTSTORE_CREDENTIALS: keystore-cred

      KAFKA_SSL_KEYSTORE_CREDENTIALS: keystore-cred
      KAFKA_SSL_KEY_CREDENTIALS: keystore-cred
      KAFKA_SSL_TRUSTSTORE_CREDENTIALS: keystore-cred
      
      KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: " "
      KAFKA_LISTENER_NAME_INTERNAL_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: " "
      KAFKA_SSL_CLIENT_AUTH: requested
      KAFKA_SECURITY_INTER_BROKER_PROTOCOL: SSL
      KAFKA_OPTS: -Djava.security.auth.login.config=/etc/kafka/secrets/kafka_dest_jaas.conf
    volumes:
      - ./Kafka-dest/secrets/:/etc/kafka/secrets

# MIRROR
  # mirror-maker:
  #   container_name: replicator
  #   depends_on:
  #     - kafka-setup
  #     - destbro
  #   build:
  #     context: .
  #     dockerfile: ./LMM/Dockerfile-lmm
  #   networks:
  #     - kafka-net

# This "container" is a workaround to pre-create topics
  kafka-setup:
    image: confluentinc/cp-kafka
    hostname: kafka-setup
    container_name: kafka-setup
    depends_on:
      # - zookeeperSource
      # - sourcebro
      - zookeeperSource
      - destbro
    networks:
      - kafka-net
    command: "bash -c 'echo Waiting for Kafka to be ready... && \
      cub kafka-ready -b sourcebro:9092 1 20 && \
      kafka-topics --bootstrap-server=localhost:9093 --list'"
      # kafka-topics --create --topic foo --partitions 1 --replication-factor 1 --if-not-exists --bootstrap-server sourcebro:9092'"